name: Build Django Application

on:
  push:
    branches: ['master']
  pull_request:
    branches: [ "master" ]

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USER }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKER_PASSWORD }}
  AWS_PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY }}    

jobs:
  django_test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .
    env:
      DJANGO_SECRET_KEY: 54g6s%qjfnhbpw0zeoei=$!her*y(p%!&84rs$4l85io
      POSTGRES_DB: DB2
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
      DB_IGNORE_SSL: "true"
    services:
      postgres_main:
        image: postgres:13
        env:
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run Tests
        run: |
            python --version

  build-and-push:
      name: Build Docker image and push to repositories
      needs: django_test
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - name: Set up Docker Buildx
          id: buildx
          uses: docker/setup-buildx-action@v2

        - name: Login to DockerHub
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKER_USER }}
            password: ${{ secrets.DOCKER_PASSWORD }}

        - name: Login to Github Packages
          uses: docker/login-action@v2
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.G_TOKEN }}

        - name: Build image and push to Docker Hub and GitHub Container Registry
          uses: docker/build-push-action@v2
          with:
            context: ./
            tags: |
              joelwembo/cloudapp-django-web:${{ github.sha }}
              ghcr.io/joelwembo/cloudapp-django-web:${{ github.sha }}
            push: ${{ github.ref == 'refs/heads/master' }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ env.DOCKE_USER }}
        password: ${{ env.DOCKER_PASSWORD }}
    - name: Set permissions for private key
      run: |
        echo "${{ env.AWS_PRIVATE_KEY }}" > prodxsecure.pem
        chmod 600 prodxsecure.pem
    - name: Pull Docker image
      run: |
        ssh -o StrictHostKeyChecking=no -i prodxsecure.pem ubuntu@47.128.216.140 'sudo docker pull joelwembo/cloudapp-django-web:latest'
    - name: Stop running container
      run: |
        ssh -o StrictHostKeyChecking=no -i prodxsecure.pem ubuntu@47.128.216.140 'sudo docker stop cloudapp-django-web || true'
        ssh -o StrictHostKeyChecking=no -i prodxsecure.pem ubuntu@47.128.216.140 'sudo docker rm cloudapp-django-web || true'
    - name: Run new container
      run: |
        ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@47.128.216.140 'sudo docker run -d --name cloudapp -p 8585:8585 joelwembo/cloudapp-django-web:latest'          



